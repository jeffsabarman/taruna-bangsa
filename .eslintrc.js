const path = require('path')

module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:unicorn/recommended',
    'airbnb',
    'airbnb-typescript',
    'airbnb/hooks',
    'plugin:@next/next/recommended',
    'plugin:prettier/recommended',
  ],
  parserOptions: {
    project: path.join(__dirname, 'tsconfig.eslint.json'),
    tsconfigRootDir: __dirname,
  },
  env: {
    es6: true,
    browser: true,
    node: true,
    jest: true,
  },
  rules: {
    'import/prefer-default-export': 0,
    'import/no-extraneous-dependencies': 0,
    'import/no-relative-packages': 0,
    'import/no-cycle': 0,
    'import/extensions': 0,
    'import/no-absolute-path': 0,
    'import/no-import-module-exports': [
      2,
      {
        exceptions: ['**/*/jest.config.ts'],
      },
    ],
    'global-require': 0,
    'no-console': [2, { allow: ['warn', 'error'] }],
    'no-param-reassign': [
      2,
      { props: true, ignorePropertyModificationsFor: ['state', 'req'] },
    ],
    'no-plusplus': [2, { allowForLoopAfterthoughts: true }],
    'no-restricted-exports': 0,
    'no-restricted-syntax': [
      2,
      'ForInStatement',
      'LabeledStatement',
      'WithStatement',
    ],
    'no-underscore-dangle': 0,
    'no-nested-ternary': 0,
    'consistent-return': 0,
    'react/jsx-props-no-spreading': 0,
    'react/react-in-jsx-scope': 0,
    'react-hooks/exhaustive-deps': 0,
    'react/no-unused-prop-types': 0,
    'react/require-default-props': 0,
    'react/prop-types': 0,
    'react/no-array-index-key': 0,
    'react/jsx-no-useless-fragment': 0,
    'react-hooks/rules-of-hooks': 0,
    'react/function-component-definition': 0,
    '@typescript-eslint/no-var-requires': 0,
    '@typescript-eslint/ban-ts-comment': 0,
    '@typescript-eslint/naming-convention': 0,
    '@typescript-eslint/no-unused-vars': 0,
    'unicorn/no-null': 0,
    'unicorn/no-array-reduce': 0,
    'unicorn/no-thenable': 0,
    'unicorn/prefer-module': 0,
    'unicorn/prefer-top-level-await': 0,
    'unicorn/prevent-abbreviations': 0,
    'unicorn/prefer-spread': 0,
    'unicorn/filename-case': [
      2,
      { cases: { camelCase: true, pascalCase: true, kebabCase: true } },
    ],
    'prettier/prettier': [
      'error',
      {
        endOfLine: 'auto',
      },
    ],
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
}
